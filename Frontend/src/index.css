* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Oswald';
}

body {
  background: rgb(201, 76, 76);
  color: white;
  margin: 0;
  padding: 0;
  min-height: 100vh;
  box-sizing: border-box;
}

p {
  font-size: 1.2em;
}

button {
  font-size: 1.8em;
  color: white;
  text-align: center;
  border: none;
  padding: 0;
  margin: 0;
  text-align: center;
  
  /* line-height: 1.8em; */
}

.allContent {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.pageContent {
  flex: auto;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  margin-bottom: 2vh;
}

.puzzleBrowser {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin-top: 1vh;
  align-self: center;
  width: 100%;
}

.puzzleBrowser button {
  flex: 1;
  background: none;
  border: none;
}

.puzzleBrowser > * {
  flex: 1;
  text-align: center;
}

.voteOptions {
  margin-top: 5vh;
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1vh;
}

.voteOption {
  background-color: rgb(255, 196, 0);
  /* box-shadow:0 2px 5px #000000; */
  width: 100%;
  height: 100%;
  height: 7vh;
  width: 13vh;
  text-align: center;
  border-radius: 1vh;
  
  flex-wrap: nowrap;
}

.url {
  align-self: center;
  margin-top: 1vh;
  /* align-items: center; */
}

.urlForm {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 2vh;
  margin-top: 1vh;
}

.urlField {
  border: none;
  border-radius: 1vh;
  /* text-align: start;
  align-items: center; */
  width: 100%;
  padding: 1vh;
}

.urlButton {
  background-color: orangered;
  height: 4vh;
  width: 6.5vh;
  font-size: 1.2em;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.5vh;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

.actionsParent {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.actions {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0.8vh;
  margin-top: 1vh;
}

.action {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 8vh;
  height: 5vh;
  border-radius: 1vh;
  border: none;
  cursor: pointer;
}

.action label {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: rgb(255, 165, 0, 0.2);
  border-radius: 1vh;
  text-align: center;
  cursor: pointer;
  font-size: 1.5em;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
}

/* When the option is active (checked), the color changes to orange */
.action label.toggleActive {
  background-color: orange;
}

.action input[type="checkbox"] {
  display: none; /* Hide the default checkbox */
}

.submit {
  margin-top: 2vh;
  margin-bottom: 2vh;
  align-self: center;
}

.submit button {
  width: 14vh;
  height: 6.5vh;
  background-color: orangered;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 2vh;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

.footer {
  flex-shrink: 0;
  height: 4vh;
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0));
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.logo {
  height: 100%;
  align-self: flex-end;
  margin-left: 1vh;
}

.copyright {
  margin-right: 1vh;
}

.navbar {  
  flex-shrink: 0;
  height: 5vh;
  /* position: fixed; */
  /* position: top; */
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0));  
}

.hidden {
  visibility: hidden;
}

.puzzleNotFound {
  align-self: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-size: 1.6em;
}

.loadingScreen {
  align-self: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-size: 1.6em;
}

@media (min-width: 950px) { /* Adjust the min-width as needed for your definition of "mobile width" */
  
  .puzzleBrowser {
    width: 40%;
  }
}

@media (min-width: 1268px) { /* Adjust the min-width as needed for your definition of "mobile width" */
  
  .puzzleBrowser {
    width: 35%;
  }
}